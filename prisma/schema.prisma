generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Interval {
    DAILY
    WEEKLY
    BIWEEKLY
    MONTHLY
    YEARLY

    @@map("interval")
}

enum Roles {
    AllRounder     @map("all_rounder")
    Healer         @map("healer")
    MeleeDPS       @map("melee_dps")
    MagicRangedDPS @map("magic_ranged_dps")
    PhysRangedDPS  @map("phys_ranged_dps")
    Tank           @map("tank")
    Absence        @map("absence")
    Bench          @map("bench")
    Late           @map("late")
    Tentative      @map("tentative")

    @@map("roles")
}

enum Jobs {
    AllRounder  @map("all_rounder")
    Paladin     @map("paladin")
    Warrior     @map("warrior")
    Dragoon     @map("dragoon")
    Monk        @map("monk")
    Bard        @map("bard")
    BlackMage   @map("black_mage")
    Summoner    @map("summoner")
    Scholar     @map("scholar")
    WhiteMage   @map("white_mage")
    Ninja       @map("ninja")
    DarkKnight  @map("dark_knight")
    Machinist   @map("machinist")
    Astrologian @map("astrologian")
    Samurai     @map("samurai")
    RedMage     @map("red_mage")
    BlueMage    @map("blue_mage")
    Gunbreaker  @map("gunbreaker")
    Dancer      @map("dancer")
    Reaper      @map("reaper")
    Sage        @map("sage")
    Viper       @map("viper")
    Pictomancer @map("pictomancer")

    @@map("jobs")
}

model EventManagers {
    id        String   @id @default(cuid())
    discordId String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("event_managers")
}

model VerifiedServers {
    id        String   @id @default(cuid())
    discordId String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("verified_servers")
}

model Event {
    id          String         @id @default(cuid())
    name        String
    description String?
    interval    Interval?
    leader      String
    roleToPing  String?        @map("role_to_ping")
    channel     String         @map("channel")
    createdAt   DateTime       @default(now())
    updatedAt   DateTime       @updatedAt
    instance    EventInstance?

    @@map("events")
}

model EventInstance {
    id           String        @id @default(cuid())
    event        Event         @relation(fields: [eventId], references: [id])
    eventId      String        @unique @map("event_id")
    dateTime     DateTime      @map("date_time")
    participants Participant[]
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt

    @@map("event_instances")
}

model Participant {
    id            String        @id
    role          Roles
    job           Jobs
    discordId     String        @unique
    signupOrder   Int
    eventId       String        @map("event_id")
    eventInstance EventInstance @relation(fields: [eventId], references: [id])
    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt

    @@map("participants")
}
